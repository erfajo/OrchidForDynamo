{
  "Uuid": "cde585c9-2b7e-4778-8b0c-5e6a4c8a42ae",
  "IsCustomNode": false,
  "Description": null,
  "Name": "WallHole",
  "ElementResolver": {
    "ResolutionMap": {
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "12e8d723218340389735b27c6616ff6f",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d617e299755047c3add9cc40e21c65fb",
          "Name": "revitSolid",
          "Description": "RevitSolid as Orchid type.\n\nRevitSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77616128472b4134b1d0eb3e0d73661f",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fcd5ae65f22f4ff68565c7604fad810a",
          "Name": "Element",
          "Description": "Intersecting element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.RevitSolid.Intersect@Orchid.Geometry.RevitSolid,Revit.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get elements intersecting with a revit solid. Note. Geometry nodes starting with \"Revit\" is functions using the Revit API geometry!, it is NOT using the DesignScript (Dynamo) geometry. This is by far the fastest and most memory efficient way to work with geometry. However, there is no preview available for this kind of geometry, meaning, you need to know what you are doing while working with these geometry nodes!\n\nRevitSolid.Intersect (revitSolid: RevitSolid, elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "f0492761e6a943ccb7f0cdac2bcb7485",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "6f162f934df440bdb6bb2c954eb12bdc",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "765b7b67b6624016bbc730c8392dab5c",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "a538fbc9a9b142a285de6d94e588ce48",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "ad727515e2f74e6a9ae327ed46a2a4ab",
          "Name": "form",
          "Description": "Form element as Dynamo type.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c213e42c550f4681bfee0d50302734e3",
          "Name": "RevitSolid",
          "Description": "Revit solid element as Orchid type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.Form.RevitSolid@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Get Orchid solid from solid and void form. Note. Geometry nodes starting with \"Revit\" is functions using the Revit API geometry!, it is NOT using the DesignScript (Dynamo) geometry. This is by far the fastest and most memory efficient way to work with geometry. However, there is no preview available for this kind of geometry, meaning, you need to know what you are doing while working with these geometry nodes!\n\nForm.RevitSolid (form: Element): RevitSolid[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "a208070803f240a4898ae4d94107331e",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "530b90ab20924fd7b44b299dd92dfc00",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aabc8200173f4e789612ee62c83cdbb6",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5f5ff73418754224a400b099e13f5819",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c9e4ed1d2c894c919bac770f4bfa8a32",
          "Name": "revitSolid",
          "Description": "RevitSolid as Orchid type.\n\nRevitSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5498e883bd7648aab6231a2e66784e12",
          "Name": "Element",
          "Description": "Intersecting element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.RevitSolid.Intersect@Orchid.Geometry.RevitSolid",
      "Replication": "Auto",
      "Description": "Get elements intersecting with a revit solid. Note. Geometry nodes starting with \"Revit\" is functions using the Revit API geometry!, it is NOT using the DesignScript (Dynamo) geometry. This is by far the fastest and most memory efficient way to work with geometry. However, there is no preview available for this kind of geometry, meaning, you need to know what you are doing while working with these geometry nodes!\n\nRevitSolid.Intersect (revitSolid: RevitSolid): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "db630e7a26ab4f218d4efbee5a07a174",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4edddf3a004b4d2bad904eeceda121fe",
          "Name": "document",
          "Description": "Project document (rvt).\n\nDocument\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0eb0fc7c0cd648efae07cfbf0e898b51",
          "Name": "category",
          "Description": "Category as Dynamo type.\n\nCategory[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9d59f4840ee4ce09eb1edac0f6e0eca",
          "Name": "Element",
          "Description": "Element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7bb7e1a2a41647358903e689e1c8d108",
          "Name": "Category",
          "Description": "Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.RevitProject.Elements.Element.ByCategory@Revit.Application.Document,Revit.Elements.Category[]",
      "Replication": "Auto",
      "Description": "Get all elements by category in document, return element grouped by category.\n\nElement.ByCategory (document: Document = null, category: Category[] = null): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "e60c10cc39644c8897ba56abd74d4203",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "2c215dc433634ac0a22f475f98ee8005",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31768f6ef19e47aabf84283dff596aba",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "a1161cd6caf7432eb68ea67310ce4e59",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dcf3a4fa80cf40339ad7564d13dd5879",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Walls\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "19b5fd164fbf408db444fc665be6d611",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "684ed8ea990f4f9792e0668ee4b685df",
          "Name": "dynamoSolid",
          "Description": "DynamoSolid as Dynamo type.\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f948b5e9b35f4ae7913176062c1c4b8f",
          "Name": "elements",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f178ee3911cd4611a167d6d9f7e61ddb",
          "Name": "Element",
          "Description": "Intersecting element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.DynamoSolid.Intersect@Autodesk.DesignScript.Geometry.Solid,Revit.Elements.Element[]",
      "Replication": "Auto",
      "Description": "Get elements intersecting with a dynamo solid. Note. Geometry nodes starting with \"Dynamo\" are functions using the DesignScript (Dynamo) geometry. This is a costly way (speed/memory) to work with geometry in comparison to eg. Revit API geometry. However, it is generic and works if you are transferring geometry between different platforms or want to use Dynamo to create geometry before transferring it to eg. Revit.\n\nDynamoSolid.Intersect (dynamoSolid: Solid, elements: Element[]): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "25902672b3fa4a3abdd5b191b0c24b20",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "ad5a5932a82a4c7eb946aa1d865f0093",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1d2817757e343bb9d38a2221c8eb3fb",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "571c1ebf92f24596afb6b1162eb6bdaf",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "e84bf0f4b67e42a8975f709978b5be2c",
          "Name": "family",
          "Description": "List of families.\n\nFamily[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51da697833484b3a82c1a11e53781057",
          "Name": "Document",
          "Description": "Project document (rvt).",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.RevitProject.Elements.Family.Edit@Revit.Elements.Family[]",
      "Replication": "Auto",
      "Description": "Edit family document.\n\nFamily.Edit (family: Family[]): Document[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "98a6a0916de44adeae2b1070dd484fda",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fb63269f7eaa4fe587809d5355b80370",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "21e8af0de0ca40dc8803e19e4a2d33f8",
          "Name": "Family",
          "Description": "Family",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetFamily",
      "Replication": "Auto",
      "Description": "Gets the family of this family instance\n\nFamilyInstance.GetFamily: Family"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "45342fee09c44bdaadd0e681fc19d076",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "cd957983374947198a06f8ef47b59f6d",
          "Name": "form",
          "Description": "Form element as Dynamo type.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49c2ebd0d8534f9992977653ea935995",
          "Name": "DynamoSolid",
          "Description": "Dynamo solid element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.Form.DynamoSolid@Revit.Elements.Element",
      "Replication": "Auto",
      "Description": "Get Dynamo solid from solid and void form. Note. Geometry nodes starting with \"Dynamo\" are functions using the DesignScript (Dynamo) geometry. This is a costly way (speed/memory) to work with geometry in comparison to eg. Revit API geometry. However, it is generic and works if you are transferring geometry between different platforms or want to use Dynamo to create geometry before transferring it to eg. Revit.\n\nForm.DynamoSolid (form: Element): Solid[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "6e271be4d60445bc81793283c3a08295",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "44212038355b405daaef1e5a5dae6e36",
          "Name": "dynamoSolid",
          "Description": "DynamoSolid as Dynamo type.\n\nSolid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a452e2919f4b4ac8a2b33917abdb2b04",
          "Name": "Element",
          "Description": "Intersecting element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.DynamoSolid.Intersect@Autodesk.DesignScript.Geometry.Solid",
      "Replication": "Auto",
      "Description": "Get elements intersecting with a dynamo solid. Note. Geometry nodes starting with \"Dynamo\" are functions using the DesignScript (Dynamo) geometry. This is a costly way (speed/memory) to work with geometry in comparison to eg. Revit API geometry. However, it is generic and works if you are transferring geometry between different platforms or want to use Dynamo to create geometry before transferring it to eg. Revit.\n\nDynamoSolid.Intersect (dynamoSolid: Solid): Element[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "Id": "9f4ee4981a8c415694c955aa6c3ae0b2",
      "NodeType": "ExtensionNode",
      "Inputs": [
        {
          "Id": "cf9630ffa98941569e2592b08ee4ce95",
          "Name": "",
          "Description": "Node to evaluate.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f0b72104b8a461abcf2ea0ef8c6a013",
          "Name": "",
          "Description": "Watch contents.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualizes a node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "75cd129c129a40898e2a7d8ee730993a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "4ac440660d4e4217a1bb2cb458ef9f3a",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d44f07a588484325a2496aa6ddd4e724",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2eac91025bf8431a8a5296750f0b8c82",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ce426bdeb4344d7990b58ef87528c7e",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "ae09a7c0a81c4cc1b08c658b9bf12e1b",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fca3fd3f0e5447b8ba6539f67d9da452",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85e928baf0df4a0f8bc8d52bbb8a3b26",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e0566a1a90544c09fa065a568589581",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35f2ccc50f0945d985be46d36559bbba",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "c341e94d197a41f5b9f543cd7f0fb54c",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "584a754814524d96a7c48a7fb4ec1442",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb0ee5dbdfc9439daa6d1f350ebc02f9",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "558e30776a1c4ef0999a0c6007e4f7e1",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8fcfd1996104722808aa9e9c6c1ec0a",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "// Search string\n\"Hole\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "d2371cff89574a29aef53526360ae717",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "3bc74a605ff6469cac521092b0e46a44",
          "Name": "document",
          "Description": "Project document (rvt).\n\nDocument\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1659c2b6c9114d1396e36e12d064ce0b",
          "Name": "category",
          "Description": "Category as Dynamo type.\n\nCategory[]\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f98e949f9704bf1b4f44e1b7984560e",
          "Name": "Element",
          "Description": "Element.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7408b1b2089d4d7d9555a0b9aefa5c8d",
          "Name": "Category",
          "Description": "Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.RevitProject.Elements.Element.ByCategory@Revit.Application.Document,Revit.Elements.Category[]",
      "Replication": "Auto",
      "Description": "Get all elements by category in document, return element grouped by category.\n\nElement.ByCategory (document: Document = null, category: Category[] = null): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5cc6eeda7e0c4595b758358e6ace764d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "530490a5c6bb41e29160878c4e5f77f1",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd75f37a830c4c4fbba0254a65303103",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "Id": "2e723256348f4b16a66c69b0e022115a",
      "NodeType": "CodeBlockNode",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "858cffa93ae64ad5aa617869684d0f1a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly",
      "Code": "\"Generic Models\";"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "5c51589bc9bc4e55a19b2197bf205acb",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "34e297c37f834d71b18bd5da702db7f5",
          "Name": "document",
          "Description": "Document.\n\nDocument\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f7608dbda7b34171a21888307db11057",
          "Name": "Form",
          "Description": "Form element as Dynamo type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.Geometry.Form.Get@Revit.Application.Document",
      "Replication": "Auto",
      "Description": "Get Form element in document.\n\nForm.Get (document: Document = null): Element[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "54f36a3f46354309a5b243c1ad5f46c1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c0d453c9a725451a801287e71a6284ba",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef567e59bd894df69d57764337778c90",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c6ee20db85c04eaca86a7f2805704e69",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "99a10e1f892b437f910c7a435817ca8d",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "d292a8b06ce741b5b35cf39a951cb020",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "095247f631b54a7b812c227f28595546",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bdef37e358e64c8eb3c00f11815eb921",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "2ec9a11913294e6ea19341f3ddc3ee26",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "c229743a0d6c41ee9b8b348099e312f2",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ff7b100d44243498a18b9e424e54c5d",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77628581011441b88370dc44a6737275",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "8f407f5c25f34b4e91fdcb7554699687",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "fa9ef05c91b24d10bedc0266ab68ab0c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6db61c7c7e814fce82aef91062b999b5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74f062799372482bbb64b852d23b14cf",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "3c18820dc9cd44868f4385ef078f5a5a",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "1c64b51c89084114b94d6922827cf7d7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e6a41106e5c4130956ef477814efcf7",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5bf9a147f81d4ef4b87a3e8d96c8d5f7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "Id": "aa52aabee8354382896f5fd7c20d98c1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "0a88216c67f7431fad65bb476595e7eb",
          "Name": "document",
          "Description": "Project document (rvt).\n\nDocument",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d69904e08d04712881ef9d1dd54e0e7",
          "Name": "save",
          "Description": "Save opened document?\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4b26626af04c4474aee2ab812701ba51",
          "Name": "watch",
          "Description": "Add a watch node to verify the output.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "FunctionSignature": "Orchid.RevitProject.Common.Document.Close@Revit.Application.Document,bool",
      "Replication": "Auto",
      "Description": "Close document.\n\nDocument.Close (document: Document, save: bool = false): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "Orchid.Common.DataStream.Await@var[]..[],var[]..[]",
      "FunctionType": "VariableArgument",
      "Id": "9f9b5826671a445a8eb33f3bf12eecb1",
      "NodeType": "FunctionNode",
      "Inputs": [
        {
          "Id": "05434734000b4279aa006ff23a3cbccc",
          "Name": "pass",
          "Description": "Data to pass.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3909644c22494f3a9c04fdd6e7b50d30",
          "Name": "waitFor0",
          "Description": "Data object(s) to wait for.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bee3bf8c2095431d970c914395915807",
          "Name": "waitFor1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1aef0b1d857a4516b852dfc5de0e92cc",
          "Name": "waitFor2",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3bdf9f6aa69f4802bbfaedecd16e6ac3",
          "Name": "waitFor3",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ff4ca3a255542f59c32ef68290620f2",
          "Name": "pass",
          "Description": "Passed data.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Await data stream(s) before passing another data stream.\n\nDataStream.Await (pass: var[]..[], waitFors: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "fcd5ae65f22f4ff68565c7604fad810a",
      "End": "6f162f934df440bdb6bb2c954eb12bdc",
      "Id": "4b2f85456d484b628c391c46a0d4bccb",
      "IsHidden": "False"
    },
    {
      "Start": "765b7b67b6624016bbc730c8392dab5c",
      "End": "3bdf9f6aa69f4802bbfaedecd16e6ac3",
      "Id": "95b880c5e08344799d30f6e789909eae",
      "IsHidden": "False"
    },
    {
      "Start": "c213e42c550f4681bfee0d50302734e3",
      "End": "fa9ef05c91b24d10bedc0266ab68ab0c",
      "Id": "149d7b5d0a954d03b8932f910e4a8091",
      "IsHidden": "False"
    },
    {
      "Start": "aabc8200173f4e789612ee62c83cdbb6",
      "End": "1aef0b1d857a4516b852dfc5de0e92cc",
      "Id": "12f028b608e94e4b9c7cad8093e66698",
      "IsHidden": "False"
    },
    {
      "Start": "5498e883bd7648aab6231a2e66784e12",
      "End": "530b90ab20924fd7b44b299dd92dfc00",
      "Id": "f302bdefcbfa4f119cbf486eaa9494ed",
      "IsHidden": "False"
    },
    {
      "Start": "a9d59f4840ee4ce09eb1edac0f6e0eca",
      "End": "d292a8b06ce741b5b35cf39a951cb020",
      "Id": "879f2aa27f2f488cb8e5a8d911b04bb3",
      "IsHidden": "False"
    },
    {
      "Start": "31768f6ef19e47aabf84283dff596aba",
      "End": "0eb0fc7c0cd648efae07cfbf0e898b51",
      "Id": "f1dc6c32f53d4c74a27c0f3d02d3d89a",
      "IsHidden": "False"
    },
    {
      "Start": "dcf3a4fa80cf40339ad7564d13dd5879",
      "End": "2c215dc433634ac0a22f475f98ee8005",
      "Id": "d206cb344af64a8e9d785c78721e0e11",
      "IsHidden": "False"
    },
    {
      "Start": "f178ee3911cd4611a167d6d9f7e61ddb",
      "End": "ad5a5932a82a4c7eb946aa1d865f0093",
      "Id": "c5377e0bf283452a9d921453da47d891",
      "IsHidden": "False"
    },
    {
      "Start": "d1d2817757e343bb9d38a2221c8eb3fb",
      "End": "bee3bf8c2095431d970c914395915807",
      "Id": "6072b398129a40ee8c5491b01473d181",
      "IsHidden": "False"
    },
    {
      "Start": "51da697833484b3a82c1a11e53781057",
      "End": "34e297c37f834d71b18bd5da702db7f5",
      "Id": "7efb34cb3c8f463e8b3fff130c97179e",
      "IsHidden": "False"
    },
    {
      "Start": "51da697833484b3a82c1a11e53781057",
      "End": "05434734000b4279aa006ff23a3cbccc",
      "Id": "0dcfe08f3d7f4455b80c524b32ab4156",
      "IsHidden": "False"
    },
    {
      "Start": "21e8af0de0ca40dc8803e19e4a2d33f8",
      "End": "e84bf0f4b67e42a8975f709978b5be2c",
      "Id": "71bb67681f334ff89a05e96d3ff5ec41",
      "IsHidden": "False"
    },
    {
      "Start": "49c2ebd0d8534f9992977653ea935995",
      "End": "1c64b51c89084114b94d6922827cf7d7",
      "Id": "3a4c8c9da80941b88d7330656ed975b9",
      "IsHidden": "False"
    },
    {
      "Start": "a452e2919f4b4ac8a2b33917abdb2b04",
      "End": "cf9630ffa98941569e2592b08ee4ce95",
      "Id": "46c63216718a4ddc855260fa77e85f37",
      "IsHidden": "False"
    },
    {
      "Start": "3f0b72104b8a461abcf2ea0ef8c6a013",
      "End": "3909644c22494f3a9c04fdd6e7b50d30",
      "Id": "ac6f58c34fcb4c6882efa119bb50dd31",
      "IsHidden": "False"
    },
    {
      "Start": "2eac91025bf8431a8a5296750f0b8c82",
      "End": "fb63269f7eaa4fe587809d5355b80370",
      "Id": "0b2042ea57984e4ca4331d89277cc573",
      "IsHidden": "False"
    },
    {
      "Start": "35f2ccc50f0945d985be46d36559bbba",
      "End": "d44f07a588484325a2496aa6ddd4e724",
      "Id": "5c62b30b775544e3bf63bdcba62fb4fb",
      "IsHidden": "False"
    },
    {
      "Start": "bb0ee5dbdfc9439daa6d1f350ebc02f9",
      "End": "fca3fd3f0e5447b8ba6539f67d9da452",
      "Id": "3dbcc01cef9844d0a3ba5f76de5a1872",
      "IsHidden": "False"
    },
    {
      "Start": "b8fcfd1996104722808aa9e9c6c1ec0a",
      "End": "85e928baf0df4a0f8bc8d52bbb8a3b26",
      "Id": "cbf1a799d7a441dd870ed5e63b8040f1",
      "IsHidden": "False"
    },
    {
      "Start": "5f98e949f9704bf1b4f44e1b7984560e",
      "End": "c0d453c9a725451a801287e71a6284ba",
      "Id": "1cf5f5602e1049f9916998099ce26fbe",
      "IsHidden": "False"
    },
    {
      "Start": "bd75f37a830c4c4fbba0254a65303103",
      "End": "1659c2b6c9114d1396e36e12d064ce0b",
      "Id": "8aa08bc8422e4152b28c457937476b88",
      "IsHidden": "False"
    },
    {
      "Start": "858cffa93ae64ad5aa617869684d0f1a",
      "End": "530490a5c6bb41e29160878c4e5f77f1",
      "Id": "3ccb107351024466b33638c368febfa3",
      "IsHidden": "False"
    },
    {
      "Start": "f7608dbda7b34171a21888307db11057",
      "End": "c229743a0d6c41ee9b8b348099e312f2",
      "Id": "7e08941c922b4dabb8fafd73977a4f9c",
      "IsHidden": "False"
    },
    {
      "Start": "c6ee20db85c04eaca86a7f2805704e69",
      "End": "4ac440660d4e4217a1bb2cb458ef9f3a",
      "Id": "3bdcf0588e644b4181916793a08f34f6",
      "IsHidden": "False"
    },
    {
      "Start": "c6ee20db85c04eaca86a7f2805704e69",
      "End": "584a754814524d96a7c48a7fb4ec1442",
      "Id": "47db1b73b1194e02ab9fc598c5c88fef",
      "IsHidden": "False"
    },
    {
      "Start": "bdef37e358e64c8eb3c00f11815eb921",
      "End": "77616128472b4134b1d0eb3e0d73661f",
      "Id": "0fa5a352fd6b4c02879defee86682275",
      "IsHidden": "False"
    },
    {
      "Start": "bdef37e358e64c8eb3c00f11815eb921",
      "End": "f948b5e9b35f4ae7913176062c1c4b8f",
      "Id": "dc004cd5cad94f88b8e8182cf3124355",
      "IsHidden": "False"
    },
    {
      "Start": "77628581011441b88370dc44a6737275",
      "End": "ad727515e2f74e6a9ae327ed46a2a4ab",
      "Id": "d229789218c94a308bc2b5e51616bdf9",
      "IsHidden": "False"
    },
    {
      "Start": "77628581011441b88370dc44a6737275",
      "End": "cd957983374947198a06f8ef47b59f6d",
      "Id": "7afc2e7d137140878f27064b99df4e22",
      "IsHidden": "False"
    },
    {
      "Start": "74f062799372482bbb64b852d23b14cf",
      "End": "d617e299755047c3add9cc40e21c65fb",
      "Id": "7dd68ae8e1044441b40b9b993b4f200c",
      "IsHidden": "False"
    },
    {
      "Start": "74f062799372482bbb64b852d23b14cf",
      "End": "c9e4ed1d2c894c919bac770f4bfa8a32",
      "Id": "f43ca92f1178496f80c8df1dc9723a57",
      "IsHidden": "False"
    },
    {
      "Start": "5bf9a147f81d4ef4b87a3e8d96c8d5f7",
      "End": "684ed8ea990f4f9792e0668ee4b685df",
      "Id": "8f35efba26ee4b2ca7cd1a49db93a90e",
      "IsHidden": "False"
    },
    {
      "Start": "5bf9a147f81d4ef4b87a3e8d96c8d5f7",
      "End": "44212038355b405daaef1e5a5dae6e36",
      "Id": "f8165edc178743f296686e75a7000fd4",
      "IsHidden": "False"
    },
    {
      "Start": "4ff4ca3a255542f59c32ef68290620f2",
      "End": "0a88216c67f7431fad65bb476595e7eb",
      "Id": "e315205d4cba4deeb229c9f4f02d4b40",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Orchid",
      "Version": "2.19.3.6432",
      "ReferenceType": "Package",
      "Nodes": [
        "12e8d723218340389735b27c6616ff6f",
        "a538fbc9a9b142a285de6d94e588ce48",
        "5f5ff73418754224a400b099e13f5819",
        "db630e7a26ab4f218d4efbee5a07a174",
        "19b5fd164fbf408db444fc665be6d611",
        "571c1ebf92f24596afb6b1162eb6bdaf",
        "45342fee09c44bdaadd0e681fc19d076",
        "6e271be4d60445bc81793283c3a08295",
        "d2371cff89574a29aef53526360ae717",
        "5c51589bc9bc4e55a19b2197bf205acb",
        "aa52aabee8354382896f5fd7c20d98c1",
        "9f9b5826671a445a8eb33f3bf12eecb1"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.19.3.6394",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "_Background Preview",
      "EyeX": -771.78920386787968,
      "EyeY": 2592.719275504739,
      "EyeZ": 1337.3920538918071,
      "LookX": 493.80535235355148,
      "LookY": -730.52628288588539,
      "LookZ": -556.39425249357271,
      "UpX": 0.35273570941645438,
      "UpY": 0.84712192138220332,
      "UpZ": -0.39744429750134197
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "12e8d723218340389735b27c6616ff6f",
        "Name": "RevitSolid.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4806.5668791831977,
        "Y": -12013.315869890024
      },
      {
        "Id": "f0492761e6a943ccb7f0cdac2bcb7485",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5159.3668791831969,
        "Y": -12013.315869890024
      },
      {
        "Id": "a538fbc9a9b142a285de6d94e588ce48",
        "Name": "Form.RevitSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4177.756905806451,
        "Y": -12170.315869890024
      },
      {
        "Id": "a208070803f240a4898ae4d94107331e",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5159.3668791831969,
        "Y": -12327.315869890024
      },
      {
        "Id": "5f5ff73418754224a400b099e13f5819",
        "Name": "RevitSolid.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4806.5668791831977,
        "Y": -12327.315869890024
      },
      {
        "Id": "db630e7a26ab4f218d4efbee5a07a174",
        "Name": "Element.ByCategory",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3524.3854299447526,
        "Y": -12574.707208148744
      },
      {
        "Id": "e60c10cc39644c8897ba56abd74d4203",
        "Name": "Category.ByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3209.9854299447525,
        "Y": -12540.707208148744
      },
      {
        "Id": "a1161cd6caf7432eb68ea67310ce4e59",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2955.5854299447524,
        "Y": -12540.879708148745
      },
      {
        "Id": "19b5fd164fbf408db444fc665be6d611",
        "Name": "DynamoSolid.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4806.5668791831977,
        "Y": -12806.23608833533
      },
      {
        "Id": "25902672b3fa4a3abdd5b191b0c24b20",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5159.3668791831969,
        "Y": -12806.23608833533
      },
      {
        "Id": "571c1ebf92f24596afb6b1162eb6bdaf",
        "Name": "Family.Edit",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2609.8992062137486,
        "Y": -12396.730832935231
      },
      {
        "Id": "98a6a0916de44adeae2b1070dd484fda",
        "Name": "FamilyInstance.GetFamily",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 2244.2992062137482,
        "Y": -12396.730832935231
      },
      {
        "Id": "45342fee09c44bdaadd0e681fc19d076",
        "Name": "Form.DynamoSolid",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4177.7668791831966,
        "Y": -12963.23608833533
      },
      {
        "Id": "6e271be4d60445bc81793283c3a08295",
        "Name": "DynamoSolid.Intersect",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4806.5668791831977,
        "Y": -13120.23608833533
      },
      {
        "Id": "9f4ee4981a8c415694c955aa6c3ae0b2",
        "Name": "Watch",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5159.3668791831969,
        "Y": -13120.23608833533
      },
      {
        "Id": "75cd129c129a40898e2a7d8ee730993a",
        "Name": "List.FilterByBoolMask",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1909.8992062137486,
        "Y": -12396.730832935231
      },
      {
        "Id": "ae09a7c0a81c4cc1b08c658b9bf12e1b",
        "Name": "String.Contains",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1589.0992062137484,
        "Y": -12362.730832935231
      },
      {
        "Id": "c341e94d197a41f5b9f543cd7f0fb54c",
        "Name": "Element.Name",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1276.2992062137487,
        "Y": -12427.730832935231
      },
      {
        "Id": "558e30776a1c4ef0999a0c6007e4f7e1",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 1276.2992062137487,
        "Y": -12280.248332935233
      },
      {
        "Id": "d2371cff89574a29aef53526360ae717",
        "Name": "Element.ByCategory",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 642.69920621374877,
        "Y": -12412.230832935231
      },
      {
        "Id": "5cc6eeda7e0c4595b758358e6ace764d",
        "Name": "Category.ByName",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 328.29920621374879,
        "Y": -12378.230832935231
      },
      {
        "Id": "2e723256348f4b16a66c69b0e022115a",
        "Name": "Code Block",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 9.8992062137487835,
        "Y": -12378.403332935231
      },
      {
        "Id": "5c51589bc9bc4e55a19b2197bf205acb",
        "Name": "Form.Get",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3546.7854299447527,
        "Y": -12755.848281664841
      },
      {
        "Id": "54f36a3f46354309a5b243c1ad5f46c1",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 982.69920621374877,
        "Y": -12412.230832935231
      },
      {
        "Id": "99a10e1f892b437f910c7a435817ca8d",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3864.3854299447526,
        "Y": -12574.707208148744
      },
      {
        "Id": "2ec9a11913294e6ea19341f3ddc3ee26",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 3864.3854299447526,
        "Y": -12755.848281664841
      },
      {
        "Id": "8f407f5c25f34b4e91fdcb7554699687",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4512.9668791831973,
        "Y": -12170.315869890024
      },
      {
        "Id": "3c18820dc9cd44868f4385ef078f5a5a",
        "Name": "List.Flatten",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 4512.9668791831973,
        "Y": -12963.23608833533
      },
      {
        "Id": "aa52aabee8354382896f5fd7c20d98c1",
        "Name": "Document.Close",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5912.6924408917312,
        "Y": -12527.654837283466
      },
      {
        "Id": "9f9b5826671a445a8eb33f3bf12eecb1",
        "Name": "DataStream.Await",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "ShowGeometry": true,
        "X": 5558.2924408917315,
        "Y": -12527.654837283466
      }
    ],
    "Annotations": [
      {
        "Id": "17465dd29adb40ae8a2ff93e577b2029",
        "Title": "find host elements (RevitSolid)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "12e8d723218340389735b27c6616ff6f",
          "a538fbc9a9b142a285de6d94e588ce48",
          "f0492761e6a943ccb7f0cdac2bcb7485",
          "a208070803f240a4898ae4d94107331e",
          "5f5ff73418754224a400b099e13f5819",
          "8f407f5c25f34b4e91fdcb7554699687"
        ],
        "HasNestedGroups": false,
        "Left": 4167.756905806451,
        "Top": -12399.715869890024,
        "Width": 1280.0099733767456,
        "Height": 684.60000000000036,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -12327.315869890024,
        "InitialHeight": 459.0,
        "TextblockHeight": 62.4,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "5fbce078c80649a9bfe1e2b7bf4c581e",
        "Title": "filter for valid holes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "db630e7a26ab4f218d4efbee5a07a174",
          "e60c10cc39644c8897ba56abd74d4203",
          "a1161cd6caf7432eb68ea67310ce4e59",
          "5c51589bc9bc4e55a19b2197bf205acb",
          "99a10e1f892b437f910c7a435817ca8d",
          "2ec9a11913294e6ea19341f3ddc3ee26"
        ],
        "HasNestedGroups": false,
        "Left": 2945.5854299447524,
        "Top": -12828.248281664841,
        "Width": 1122.4,
        "Height": 420.54107351609673,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -12755.848281664841,
        "InitialHeight": 360.14107351609709,
        "TextblockHeight": 62.4,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "d25c553dcb0649b7bc869c693013d886",
        "Title": "find host elements (DynamoSolid)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "19b5fd164fbf408db444fc665be6d611",
          "45342fee09c44bdaadd0e681fc19d076",
          "25902672b3fa4a3abdd5b191b0c24b20",
          "9f4ee4981a8c415694c955aa6c3ae0b2",
          "6e271be4d60445bc81793283c3a08295",
          "3c18820dc9cd44868f4385ef078f5a5a"
        ],
        "HasNestedGroups": false,
        "Left": 4167.7668791831966,
        "Top": -13192.63608833533,
        "Width": 1280.0,
        "Height": 684.60000000000036,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -13120.23608833533,
        "InitialHeight": 459.0,
        "TextblockHeight": 62.4,
        "Background": "#FFFFAA45"
      },
      {
        "Id": "f617f4a02de143909bf533fa9054b3f0",
        "Title": "Get hole elements as document (family edit)",
        "DescriptionText": "File: WallHole",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "75cd129c129a40898e2a7d8ee730993a",
          "ae09a7c0a81c4cc1b08c658b9bf12e1b",
          "d2371cff89574a29aef53526360ae717",
          "c341e94d197a41f5b9f543cd7f0fb54c",
          "5cc6eeda7e0c4595b758358e6ace764d",
          "2e723256348f4b16a66c69b0e022115a",
          "571c1ebf92f24596afb6b1162eb6bdaf",
          "98a6a0916de44adeae2b1070dd484fda",
          "558e30776a1c4ef0999a0c6007e4f7e1",
          "54f36a3f46354309a5b243c1ad5f46c1"
        ],
        "HasNestedGroups": false,
        "Left": -0.10079378625121649,
        "Top": -12500.130832935231,
        "Width": 2845.6,
        "Height": 361.28249999999753,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -12427.730832935231,
        "InitialHeight": 292.48249999999825,
        "TextblockHeight": 62.4,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "ddf9e1c20a334a85aa9b0fd238b72c64",
        "Title": "close document",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "aa52aabee8354382896f5fd7c20d98c1",
          "9f9b5826671a445a8eb33f3bf12eecb1"
        ],
        "HasNestedGroups": false,
        "Left": 5548.2924408917315,
        "Top": -12600.054837283466,
        "Width": 596.79999999999927,
        "Height": 340.19999999999891,
        "FontSize": 36.0,
        "GroupStyleId": "00000000-0000-0000-0000-000000000000",
        "InitialTop": -12527.654837283466,
        "InitialHeight": 145.0,
        "TextblockHeight": 62.4,
        "Background": "#FFC1D676"
      }
    ],
    "X": 27.380550650972754,
    "Y": 3917.4514122509263,
    "Zoom": 0.26461206004469989
  }
}